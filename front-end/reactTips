rfce => function
rce => create class
rconst => constructor

setState
1. Never modify the state directly
2. Call back function => code executed after the change
3. Use prev state value => pass the value as input to the function
	this.setState(prevState => ({
		count: prevState.count +1
	}))

Lifecycle Methods

	1. Mounting: an istance of a component is being created & insered into the DOM
	constuctor -- static getDerivedStateDromProps -- render -- componentDidMount -> (this is where you load the data)	

	2. Updating: a component is being re-rendered (change to its props or state)
	static getDerivedStateDromProps -- souldComponentUpdate -- render -- getSnapshotBeforeUdate -- componentDidUpdate

	3. Unmounting: a component is being removed from the DOM
	componentWillUnmount

	4. Error Handling: Error during rendering, a lifecycle method, in the construcrtor od any child component
	static getDerivedStateFromError -- componentDidCatch
